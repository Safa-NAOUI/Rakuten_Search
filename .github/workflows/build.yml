name: Build Android Project with SonarQube & Crashlytics

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, analyze and upload Crashlytics
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important pour une analyse SonarQube complète

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > app/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository  # Si tu utilises des dépendances Maven
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/settings.gradle') }}
          restore-keys: ${{ runner.os }}-gradle


      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube -Dsonar.projectKey=mon_projet_key -Dsonar.organization=mon_organisation -Dsonar.host.url=https://sonarcloud.io

#      - name: Build and analyze with SonarQube
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info -Dsonar.projectKey=mon_projet_key -Dsonar.organization=mon_organisation -Dsonar.host.url=https://sonarcloud.io

      - name: Upload Crashlytics mapping file
        run: ./gradlew uploadCrashlyticsMappingFileRelease
